// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: meta/identifiers.proto

package meta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardIdentifiers struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	CardKingdomEtchedId      string                 `protobuf:"bytes,1,opt,name=cardKingdomEtchedId,proto3" json:"cardKingdomEtchedId,omitempty" bson:"cardKingdomEtchedId"`            // @gotags: bson:"cardKingdomEtchedId"
	CardKingdomFoilId        string                 `protobuf:"bytes,2,opt,name=cardKingdomFoilId,proto3" json:"cardKingdomFoilId,omitempty" bson:"cardKingdomFoilId"`                // @gotags: bson:"cardKingdomFoilId"
	CardKingdomId            string                 `protobuf:"bytes,3,opt,name=cardKingdomId,proto3" json:"cardKingdomId,omitempty" bson:"cardKingdomId"`                        // @gotags: bson:"cardKingdomId"
	CardsphereId             string                 `protobuf:"bytes,4,opt,name=cardsphereId,proto3" json:"cardsphereId,omitempty" bson:"cardsphereId"`                          // @gotags: bson:"cardsphereId"
	CardsphereFoilId         string                 `protobuf:"bytes,5,opt,name=cardsphereFoilId,proto3" json:"cardsphereFoilId,omitempty" bson:"cardsphereFoilId"`                  // @gotags: bson:"cardsphereFoilId"
	CardtraderId             string                 `protobuf:"bytes,6,opt,name=cardtraderId,proto3" json:"cardtraderId,omitempty" bson:"cardtraderId"`                          // @gotags: bson:"cardtraderId"
	CsiId                    string                 `protobuf:"bytes,7,opt,name=csiId,proto3" json:"csiId,omitempty" bson:"csiId"`                                        // @gotags: bson:"csiId"
	McmId                    string                 `protobuf:"bytes,8,opt,name=mcmId,proto3" json:"mcmId,omitempty" bson:"mcmId"`                                        // @gotags: bson:"mcmId"
	McmMetaId                string                 `protobuf:"bytes,9,opt,name=mcmMetaId,proto3" json:"mcmMetaId,omitempty" bson:"mcmMetaId"`                                // @gotags: bson:"mcmMetaId"
	MiniaturemarketId        string                 `protobuf:"bytes,10,opt,name=miniaturemarketId,proto3" json:"miniaturemarketId,omitempty" bson:"miniaturemarketId"`               // @gotags: bson:"miniaturemarketId"
	MtgArenaId               string                 `protobuf:"bytes,11,opt,name=mtgArenaId,proto3" json:"mtgArenaId,omitempty" bson:"mtgArenaId"`                             // @gotags: bson:"mtgArenaId"
	MtgjsonFoilVersionId     string                 `protobuf:"bytes,12,opt,name=mtgjsonFoilVersionId,proto3" json:"mtgjsonFoilVersionId,omitempty" bson:"mtgjsonFoilVersionId"`         // @gotags: bson:"mtgjsonFoilVersionId"
	MtgjsonNonFoilVersionId  string                 `protobuf:"bytes,13,opt,name=mtgjsonNonFoilVersionId,proto3" json:"mtgjsonNonFoilVersionId,omitempty" bson:"mtgjsonNonFoilVersionId"`   // @gotags: bson:"mtgjsonNonFoilVersionId"
	MtgjsonV4Id              string                 `protobuf:"bytes,14,opt,name=mtgjsonV4Id,proto3" json:"mtgjsonV4Id,omitempty" bson:"mtgjsonV4Id"`                           // @gotags: bson:"mtgjsonV4Id"
	MtgoFoilId               string                 `protobuf:"bytes,15,opt,name=mtgoFoilId,proto3" json:"mtgoFoilId,omitempty" bson:"mtgoFoilId"`                             // @gotags: bson:"mtgoFoilId"
	MtgoId                   string                 `protobuf:"bytes,16,opt,name=mtgoId,proto3" json:"mtgoId,omitempty" bson:"mtgoId"`                                     // @gotags: bson:"mtgoId"
	MultiverseId             string                 `protobuf:"bytes,17,opt,name=multiverseId,proto3" json:"multiverseId,omitempty" bson:"multiverseId"`                         // @gotags: bson:"multiverseId"
	ScgId                    string                 `protobuf:"bytes,18,opt,name=scgId,proto3" json:"scgId,omitempty" bson:"scgId"`                                       // @gotags: bson:"scgId"
	ScryfallId               string                 `protobuf:"bytes,19,opt,name=scryfallId,proto3" json:"scryfallId,omitempty" bson:"scryfallId"`                             // @gotags: bson:"scryfallId"
	ScryfallCardBackId       string                 `protobuf:"bytes,20,opt,name=scryfallCardBackId,proto3" json:"scryfallCardBackId,omitempty" bson:"scryfallCardBackId"`             // @gotags: bson:"scryfallCardBackId"
	ScryfallOracleId         string                 `protobuf:"bytes,21,opt,name=scryfallOracleId,proto3" json:"scryfallOracleId,omitempty" bson:"scryfallOracleId"`                 // @gotags: bson:"scryfallOracleId"
	ScryfallIllustrationId   string                 `protobuf:"bytes,22,opt,name=scryfallIllustrationId,proto3" json:"scryfallIllustrationId,omitempty" bson:"scryfallIllustrationId"`     // @gotags: bson:"scryfallIllustrationId"
	TcgplayerProductId       string                 `protobuf:"bytes,23,opt,name=tcgplayerProductId,proto3" json:"tcgplayerProductId,omitempty" bson:"tcgplayerProductId"`             // @gotags: bson:"tcgplayerProductId"
	TcgplayerEtchedProductId string                 `protobuf:"bytes,24,opt,name=tcgplayerEtchedProductId,proto3" json:"tcgplayerEtchedProductId,omitempty" bson:"tcgplayerEtchedProductId"` // @gotags: bson:"tcgplayerEtchedProductId"
	TntId                    string                 `protobuf:"bytes,25,opt,name=tntId,proto3" json:"tntId,omitempty" bson:"tntId"`                                       // @gotags: bson:"tntId"
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CardIdentifiers) Reset() {
	*x = CardIdentifiers{}
	mi := &file_meta_identifiers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardIdentifiers) ProtoMessage() {}

func (x *CardIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_meta_identifiers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardIdentifiers.ProtoReflect.Descriptor instead.
func (*CardIdentifiers) Descriptor() ([]byte, []int) {
	return file_meta_identifiers_proto_rawDescGZIP(), []int{0}
}

func (x *CardIdentifiers) GetCardKingdomEtchedId() string {
	if x != nil {
		return x.CardKingdomEtchedId
	}
	return ""
}

func (x *CardIdentifiers) GetCardKingdomFoilId() string {
	if x != nil {
		return x.CardKingdomFoilId
	}
	return ""
}

func (x *CardIdentifiers) GetCardKingdomId() string {
	if x != nil {
		return x.CardKingdomId
	}
	return ""
}

func (x *CardIdentifiers) GetCardsphereId() string {
	if x != nil {
		return x.CardsphereId
	}
	return ""
}

func (x *CardIdentifiers) GetCardsphereFoilId() string {
	if x != nil {
		return x.CardsphereFoilId
	}
	return ""
}

func (x *CardIdentifiers) GetCardtraderId() string {
	if x != nil {
		return x.CardtraderId
	}
	return ""
}

func (x *CardIdentifiers) GetCsiId() string {
	if x != nil {
		return x.CsiId
	}
	return ""
}

func (x *CardIdentifiers) GetMcmId() string {
	if x != nil {
		return x.McmId
	}
	return ""
}

func (x *CardIdentifiers) GetMcmMetaId() string {
	if x != nil {
		return x.McmMetaId
	}
	return ""
}

func (x *CardIdentifiers) GetMiniaturemarketId() string {
	if x != nil {
		return x.MiniaturemarketId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgArenaId() string {
	if x != nil {
		return x.MtgArenaId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgjsonFoilVersionId() string {
	if x != nil {
		return x.MtgjsonFoilVersionId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgjsonNonFoilVersionId() string {
	if x != nil {
		return x.MtgjsonNonFoilVersionId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgjsonV4Id() string {
	if x != nil {
		return x.MtgjsonV4Id
	}
	return ""
}

func (x *CardIdentifiers) GetMtgoFoilId() string {
	if x != nil {
		return x.MtgoFoilId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgoId() string {
	if x != nil {
		return x.MtgoId
	}
	return ""
}

func (x *CardIdentifiers) GetMultiverseId() string {
	if x != nil {
		return x.MultiverseId
	}
	return ""
}

func (x *CardIdentifiers) GetScgId() string {
	if x != nil {
		return x.ScgId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallId() string {
	if x != nil {
		return x.ScryfallId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallCardBackId() string {
	if x != nil {
		return x.ScryfallCardBackId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallOracleId() string {
	if x != nil {
		return x.ScryfallOracleId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallIllustrationId() string {
	if x != nil {
		return x.ScryfallIllustrationId
	}
	return ""
}

func (x *CardIdentifiers) GetTcgplayerProductId() string {
	if x != nil {
		return x.TcgplayerProductId
	}
	return ""
}

func (x *CardIdentifiers) GetTcgplayerEtchedProductId() string {
	if x != nil {
		return x.TcgplayerEtchedProductId
	}
	return ""
}

func (x *CardIdentifiers) GetTntId() string {
	if x != nil {
		return x.TntId
	}
	return ""
}

var File_meta_identifiers_proto protoreflect.FileDescriptor

const file_meta_identifiers_proto_rawDesc = "" +
	"\n" +
	"\x16meta/identifiers.proto\x12\x04meta\"\xdb\a\n" +
	"\x0fCardIdentifiers\x120\n" +
	"\x13cardKingdomEtchedId\x18\x01 \x01(\tR\x13cardKingdomEtchedId\x12,\n" +
	"\x11cardKingdomFoilId\x18\x02 \x01(\tR\x11cardKingdomFoilId\x12$\n" +
	"\rcardKingdomId\x18\x03 \x01(\tR\rcardKingdomId\x12\"\n" +
	"\fcardsphereId\x18\x04 \x01(\tR\fcardsphereId\x12*\n" +
	"\x10cardsphereFoilId\x18\x05 \x01(\tR\x10cardsphereFoilId\x12\"\n" +
	"\fcardtraderId\x18\x06 \x01(\tR\fcardtraderId\x12\x14\n" +
	"\x05csiId\x18\a \x01(\tR\x05csiId\x12\x14\n" +
	"\x05mcmId\x18\b \x01(\tR\x05mcmId\x12\x1c\n" +
	"\tmcmMetaId\x18\t \x01(\tR\tmcmMetaId\x12,\n" +
	"\x11miniaturemarketId\x18\n" +
	" \x01(\tR\x11miniaturemarketId\x12\x1e\n" +
	"\n" +
	"mtgArenaId\x18\v \x01(\tR\n" +
	"mtgArenaId\x122\n" +
	"\x14mtgjsonFoilVersionId\x18\f \x01(\tR\x14mtgjsonFoilVersionId\x128\n" +
	"\x17mtgjsonNonFoilVersionId\x18\r \x01(\tR\x17mtgjsonNonFoilVersionId\x12 \n" +
	"\vmtgjsonV4Id\x18\x0e \x01(\tR\vmtgjsonV4Id\x12\x1e\n" +
	"\n" +
	"mtgoFoilId\x18\x0f \x01(\tR\n" +
	"mtgoFoilId\x12\x16\n" +
	"\x06mtgoId\x18\x10 \x01(\tR\x06mtgoId\x12\"\n" +
	"\fmultiverseId\x18\x11 \x01(\tR\fmultiverseId\x12\x14\n" +
	"\x05scgId\x18\x12 \x01(\tR\x05scgId\x12\x1e\n" +
	"\n" +
	"scryfallId\x18\x13 \x01(\tR\n" +
	"scryfallId\x12.\n" +
	"\x12scryfallCardBackId\x18\x14 \x01(\tR\x12scryfallCardBackId\x12*\n" +
	"\x10scryfallOracleId\x18\x15 \x01(\tR\x10scryfallOracleId\x126\n" +
	"\x16scryfallIllustrationId\x18\x16 \x01(\tR\x16scryfallIllustrationId\x12.\n" +
	"\x12tcgplayerProductId\x18\x17 \x01(\tR\x12tcgplayerProductId\x12:\n" +
	"\x18tcgplayerEtchedProductId\x18\x18 \x01(\tR\x18tcgplayerEtchedProductId\x12\x14\n" +
	"\x05tntId\x18\x19 \x01(\tR\x05tntIdB+Z)github.com/stevezaluk/mtgjson-models/metab\x06proto3"

var (
	file_meta_identifiers_proto_rawDescOnce sync.Once
	file_meta_identifiers_proto_rawDescData []byte
)

func file_meta_identifiers_proto_rawDescGZIP() []byte {
	file_meta_identifiers_proto_rawDescOnce.Do(func() {
		file_meta_identifiers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meta_identifiers_proto_rawDesc), len(file_meta_identifiers_proto_rawDesc)))
	})
	return file_meta_identifiers_proto_rawDescData
}

var file_meta_identifiers_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meta_identifiers_proto_goTypes = []any{
	(*CardIdentifiers)(nil), // 0: meta.CardIdentifiers
}
var file_meta_identifiers_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meta_identifiers_proto_init() }
func file_meta_identifiers_proto_init() {
	if File_meta_identifiers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meta_identifiers_proto_rawDesc), len(file_meta_identifiers_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_identifiers_proto_goTypes,
		DependencyIndexes: file_meta_identifiers_proto_depIdxs,
		MessageInfos:      file_meta_identifiers_proto_msgTypes,
	}.Build()
	File_meta_identifiers_proto = out.File
	file_meta_identifiers_proto_goTypes = nil
	file_meta_identifiers_proto_depIdxs = nil
}
