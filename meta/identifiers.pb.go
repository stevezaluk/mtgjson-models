// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.6.1
// source: meta/identifiers.proto

package meta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardKingdomEtchedId      string `protobuf:"bytes,1,opt,name=cardKingdomEtchedId,proto3" json:"cardKingdomEtchedId,omitempty"`
	CardKingdomFoilId        string `protobuf:"bytes,2,opt,name=cardKingdomFoilId,proto3" json:"cardKingdomFoilId,omitempty"`
	CardKingdomId            string `protobuf:"bytes,3,opt,name=cardKingdomId,proto3" json:"cardKingdomId,omitempty"`
	CardSphereId             string `protobuf:"bytes,4,opt,name=cardSphereId,proto3" json:"cardSphereId,omitempty"`
	CardSphereFoilId         string `protobuf:"bytes,5,opt,name=cardSphereFoilId,proto3" json:"cardSphereFoilId,omitempty"`
	CardTraderId             string `protobuf:"bytes,6,opt,name=cardTraderId,proto3" json:"cardTraderId,omitempty"`
	CsiId                    string `protobuf:"bytes,7,opt,name=csiId,proto3" json:"csiId,omitempty"`
	McmId                    string `protobuf:"bytes,8,opt,name=mcmId,proto3" json:"mcmId,omitempty"`
	McmMetaId                string `protobuf:"bytes,9,opt,name=mcmMetaId,proto3" json:"mcmMetaId,omitempty"`
	MiniatureMarketId        string `protobuf:"bytes,10,opt,name=miniatureMarketId,proto3" json:"miniatureMarketId,omitempty"`
	MtgArenaId               string `protobuf:"bytes,11,opt,name=mtgArenaId,proto3" json:"mtgArenaId,omitempty"`
	MtgjsonFoilVersionId     string `protobuf:"bytes,12,opt,name=mtgjsonFoilVersionId,proto3" json:"mtgjsonFoilVersionId,omitempty"`
	MtgjsonNonFoilVersionId  string `protobuf:"bytes,13,opt,name=mtgjsonNonFoilVersionId,proto3" json:"mtgjsonNonFoilVersionId,omitempty"`
	MtgjsonV4Id              string `protobuf:"bytes,14,opt,name=mtgjsonV4Id,proto3" json:"mtgjsonV4Id,omitempty"`
	MtgoFoilId               string `protobuf:"bytes,15,opt,name=mtgoFoilId,proto3" json:"mtgoFoilId,omitempty"`
	MtgoId                   string `protobuf:"bytes,16,opt,name=mtgoId,proto3" json:"mtgoId,omitempty"`
	MultiverseId             string `protobuf:"bytes,17,opt,name=multiverseId,proto3" json:"multiverseId,omitempty"`
	ScgId                    string `protobuf:"bytes,18,opt,name=scgId,proto3" json:"scgId,omitempty"`
	ScryfallId               string `protobuf:"bytes,19,opt,name=scryfallId,proto3" json:"scryfallId,omitempty"`
	ScryfallCardBackId       string `protobuf:"bytes,20,opt,name=scryfallCardBackId,proto3" json:"scryfallCardBackId,omitempty"`
	ScryfallOracleId         string `protobuf:"bytes,21,opt,name=scryfallOracleId,proto3" json:"scryfallOracleId,omitempty"`
	ScryfallIllustrationId   string `protobuf:"bytes,22,opt,name=scryfallIllustrationId,proto3" json:"scryfallIllustrationId,omitempty"`
	TcgplayerProductId       string `protobuf:"bytes,23,opt,name=tcgplayerProductId,proto3" json:"tcgplayerProductId,omitempty"`
	TcgplayerEtchedProductId string `protobuf:"bytes,24,opt,name=tcgplayerEtchedProductId,proto3" json:"tcgplayerEtchedProductId,omitempty"`
}

func (x *CardIdentifiers) Reset() {
	*x = CardIdentifiers{}
	mi := &file_meta_identifiers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardIdentifiers) ProtoMessage() {}

func (x *CardIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_meta_identifiers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardIdentifiers.ProtoReflect.Descriptor instead.
func (*CardIdentifiers) Descriptor() ([]byte, []int) {
	return file_meta_identifiers_proto_rawDescGZIP(), []int{0}
}

func (x *CardIdentifiers) GetCardKingdomEtchedId() string {
	if x != nil {
		return x.CardKingdomEtchedId
	}
	return ""
}

func (x *CardIdentifiers) GetCardKingdomFoilId() string {
	if x != nil {
		return x.CardKingdomFoilId
	}
	return ""
}

func (x *CardIdentifiers) GetCardKingdomId() string {
	if x != nil {
		return x.CardKingdomId
	}
	return ""
}

func (x *CardIdentifiers) GetCardSphereId() string {
	if x != nil {
		return x.CardSphereId
	}
	return ""
}

func (x *CardIdentifiers) GetCardSphereFoilId() string {
	if x != nil {
		return x.CardSphereFoilId
	}
	return ""
}

func (x *CardIdentifiers) GetCardTraderId() string {
	if x != nil {
		return x.CardTraderId
	}
	return ""
}

func (x *CardIdentifiers) GetCsiId() string {
	if x != nil {
		return x.CsiId
	}
	return ""
}

func (x *CardIdentifiers) GetMcmId() string {
	if x != nil {
		return x.McmId
	}
	return ""
}

func (x *CardIdentifiers) GetMcmMetaId() string {
	if x != nil {
		return x.McmMetaId
	}
	return ""
}

func (x *CardIdentifiers) GetMiniatureMarketId() string {
	if x != nil {
		return x.MiniatureMarketId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgArenaId() string {
	if x != nil {
		return x.MtgArenaId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgjsonFoilVersionId() string {
	if x != nil {
		return x.MtgjsonFoilVersionId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgjsonNonFoilVersionId() string {
	if x != nil {
		return x.MtgjsonNonFoilVersionId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgjsonV4Id() string {
	if x != nil {
		return x.MtgjsonV4Id
	}
	return ""
}

func (x *CardIdentifiers) GetMtgoFoilId() string {
	if x != nil {
		return x.MtgoFoilId
	}
	return ""
}

func (x *CardIdentifiers) GetMtgoId() string {
	if x != nil {
		return x.MtgoId
	}
	return ""
}

func (x *CardIdentifiers) GetMultiverseId() string {
	if x != nil {
		return x.MultiverseId
	}
	return ""
}

func (x *CardIdentifiers) GetScgId() string {
	if x != nil {
		return x.ScgId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallId() string {
	if x != nil {
		return x.ScryfallId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallCardBackId() string {
	if x != nil {
		return x.ScryfallCardBackId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallOracleId() string {
	if x != nil {
		return x.ScryfallOracleId
	}
	return ""
}

func (x *CardIdentifiers) GetScryfallIllustrationId() string {
	if x != nil {
		return x.ScryfallIllustrationId
	}
	return ""
}

func (x *CardIdentifiers) GetTcgplayerProductId() string {
	if x != nil {
		return x.TcgplayerProductId
	}
	return ""
}

func (x *CardIdentifiers) GetTcgplayerEtchedProductId() string {
	if x != nil {
		return x.TcgplayerEtchedProductId
	}
	return ""
}

var File_meta_identifiers_proto protoreflect.FileDescriptor

var file_meta_identifiers_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xc5,
	0x07, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f,
	0x6d, 0x45, 0x74, 0x63, 0x68, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x45, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x67,
	0x64, 0x6f, 0x6d, 0x46, 0x6f, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x46, 0x6f, 0x69, 0x6c,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x4b,
	0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64,
	0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x72, 0x64, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x61, 0x72, 0x64, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x46, 0x6f, 0x69, 0x6c, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x72, 0x64, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x46, 0x6f, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x73, 0x69, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x73, 0x69,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x6d, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x63, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x63, 0x6d, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x63, 0x6d,
	0x4d, 0x65, 0x74, 0x61, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x74, 0x67, 0x41, 0x72, 0x65, 0x6e, 0x61,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x74, 0x67, 0x41, 0x72, 0x65,
	0x6e, 0x61, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x74, 0x67, 0x6a, 0x73, 0x6f, 0x6e, 0x46,
	0x6f, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x6d, 0x74, 0x67, 0x6a, 0x73, 0x6f, 0x6e, 0x46, 0x6f, 0x69, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x6d, 0x74, 0x67, 0x6a,
	0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x6e, 0x46, 0x6f, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6d, 0x74, 0x67, 0x6a, 0x73,
	0x6f, 0x6e, 0x4e, 0x6f, 0x6e, 0x46, 0x6f, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x74, 0x67, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x34, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x74, 0x67, 0x6a, 0x73, 0x6f, 0x6e,
	0x56, 0x34, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x74, 0x67, 0x6f, 0x46, 0x6f, 0x69, 0x6c,
	0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x74, 0x67, 0x6f, 0x46, 0x6f,
	0x69, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x74, 0x67, 0x6f, 0x49, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x74, 0x67, 0x6f, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x67, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x79, 0x66, 0x61,
	0x6c, 0x6c, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x79,
	0x66, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x63, 0x72, 0x79, 0x66, 0x61,
	0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x63, 0x72, 0x79, 0x66, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x72, 0x79, 0x66, 0x61,
	0x6c, 0x6c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x63, 0x72, 0x79, 0x66, 0x61, 0x6c, 0x6c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x63, 0x72, 0x79, 0x66, 0x61, 0x6c, 0x6c, 0x49, 0x6c,
	0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x73, 0x63, 0x72, 0x79, 0x66, 0x61, 0x6c, 0x6c, 0x49, 0x6c, 0x6c, 0x75,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x63,
	0x67, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x63, 0x67, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x63,
	0x67, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x74, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x63,
	0x67, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x74, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x65, 0x76, 0x65, 0x7a, 0x61, 0x6c, 0x75, 0x6b, 0x2f,
	0x6d, 0x74, 0x67, 0x6a, 0x73, 0x6f, 0x6e, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meta_identifiers_proto_rawDescOnce sync.Once
	file_meta_identifiers_proto_rawDescData = file_meta_identifiers_proto_rawDesc
)

func file_meta_identifiers_proto_rawDescGZIP() []byte {
	file_meta_identifiers_proto_rawDescOnce.Do(func() {
		file_meta_identifiers_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_identifiers_proto_rawDescData)
	})
	return file_meta_identifiers_proto_rawDescData
}

var file_meta_identifiers_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meta_identifiers_proto_goTypes = []any{
	(*CardIdentifiers)(nil), // 0: meta.CardIdentifiers
}
var file_meta_identifiers_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meta_identifiers_proto_init() }
func file_meta_identifiers_proto_init() {
	if File_meta_identifiers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_identifiers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_identifiers_proto_goTypes,
		DependencyIndexes: file_meta_identifiers_proto_depIdxs,
		MessageInfos:      file_meta_identifiers_proto_msgTypes,
	}.Build()
	File_meta_identifiers_proto = out.File
	file_meta_identifiers_proto_rawDesc = nil
	file_meta_identifiers_proto_goTypes = nil
	file_meta_identifiers_proto_depIdxs = nil
}
