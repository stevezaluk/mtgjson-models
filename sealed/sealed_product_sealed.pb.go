// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: sealed/sealed_product_sealed.proto

package sealed

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SealedProductSealed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty" bson:"count"` // @gotags: bson:"count"
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`    // @gotags: bson:"name"
	Set           string                 `protobuf:"bytes,3,opt,name=set,proto3" json:"set,omitempty" bson:"set"`      // @gotags: bson:"set"
	Uuid          string                 `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty" bson:"uuid"`    // @gotags: bson:"uuid"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SealedProductSealed) Reset() {
	*x = SealedProductSealed{}
	mi := &file_sealed_sealed_product_sealed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SealedProductSealed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealedProductSealed) ProtoMessage() {}

func (x *SealedProductSealed) ProtoReflect() protoreflect.Message {
	mi := &file_sealed_sealed_product_sealed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealedProductSealed.ProtoReflect.Descriptor instead.
func (*SealedProductSealed) Descriptor() ([]byte, []int) {
	return file_sealed_sealed_product_sealed_proto_rawDescGZIP(), []int{0}
}

func (x *SealedProductSealed) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SealedProductSealed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SealedProductSealed) GetSet() string {
	if x != nil {
		return x.Set
	}
	return ""
}

func (x *SealedProductSealed) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_sealed_sealed_product_sealed_proto protoreflect.FileDescriptor

const file_sealed_sealed_product_sealed_proto_rawDesc = "" +
	"\n" +
	"\"sealed/sealed_product_sealed.proto\x12\x06sealed\"e\n" +
	"\x13SealedProductSealed\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03set\x18\x03 \x01(\tR\x03set\x12\x12\n" +
	"\x04uuid\x18\x04 \x01(\tR\x04uuidB-Z+github.com/stevezaluk/mtgjson-models/sealedb\x06proto3"

var (
	file_sealed_sealed_product_sealed_proto_rawDescOnce sync.Once
	file_sealed_sealed_product_sealed_proto_rawDescData []byte
)

func file_sealed_sealed_product_sealed_proto_rawDescGZIP() []byte {
	file_sealed_sealed_product_sealed_proto_rawDescOnce.Do(func() {
		file_sealed_sealed_product_sealed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sealed_sealed_product_sealed_proto_rawDesc), len(file_sealed_sealed_product_sealed_proto_rawDesc)))
	})
	return file_sealed_sealed_product_sealed_proto_rawDescData
}

var file_sealed_sealed_product_sealed_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sealed_sealed_product_sealed_proto_goTypes = []any{
	(*SealedProductSealed)(nil), // 0: sealed.SealedProductSealed
}
var file_sealed_sealed_product_sealed_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sealed_sealed_product_sealed_proto_init() }
func file_sealed_sealed_product_sealed_proto_init() {
	if File_sealed_sealed_product_sealed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sealed_sealed_product_sealed_proto_rawDesc), len(file_sealed_sealed_product_sealed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sealed_sealed_product_sealed_proto_goTypes,
		DependencyIndexes: file_sealed_sealed_product_sealed_proto_depIdxs,
		MessageInfos:      file_sealed_sealed_product_sealed_proto_msgTypes,
	}.Build()
	File_sealed_sealed_product_sealed_proto = out.File
	file_sealed_sealed_product_sealed_proto_goTypes = nil
	file_sealed_sealed_product_sealed_proto_depIdxs = nil
}
